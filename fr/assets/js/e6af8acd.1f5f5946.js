"use strict";(self.webpackChunkdoc_oibus=self.webpackChunkdoc_oibus||[]).push([[256],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,g=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return n?a.createElement(g,l(l({ref:t},c),{},{components:n})):a.createElement(g,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9699:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:5},l="OPCHDA agent",o={unversionedId:"guide/advanced/opchda-agent",id:"guide/advanced/opchda-agent",title:"OPCHDA agent",description:"OIBus embeds an agent used by OIBus to interact with OPC Servers. As a standalone agent, it can also be run through a",source:"@site/docs/guide/advanced/opchda-agent.md",sourceDirName:"guide/advanced",slug:"/guide/advanced/opchda-agent",permalink:"/fr/docs/guide/advanced/opchda-agent",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"guideSidebar",previous:{title:"OPCHDA COM/DCOM setup",permalink:"/fr/docs/guide/advanced/opchda-dcom"},next:{title:"SQL with ODBC",permalink:"/fr/docs/guide/advanced/sql-with-odbc"}},s={},u=[{value:"ping",id:"ping",level:2},{value:"Usage",id:"usage",level:3},{value:"catalog",id:"catalog",level:2},{value:"Basic usage",id:"basic-usage",level:3},{value:"Includes all and specific file",id:"includes-all-and-specific-file",level:3},{value:"bulk",id:"bulk",level:2},{value:"Basic usage",id:"basic-usage-1",level:3},{value:"With aggregates",id:"with-aggregates",level:3}],c={toc:u};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"opchda-agent"},"OPCHDA agent"),(0,r.kt)("p",null,"OIBus embeds an agent used by OIBus to interact with OPC Servers. As a standalone agent, it can also be run through a\nCommand Line Interface (CLI)."),(0,r.kt)("p",null,"Because OPC depends on COM/DCOM technology, the agent can be run on Windows only with COM/DCOM\nsettings enabled."),(0,r.kt)("p",null,"OIBusOPCHDA is built in C# with .NET Framework 4.8."),(0,r.kt)("p",null,"OPC Core components, from OPCFoundation are required to compile and use this library:\n",(0,r.kt)("a",{parentName:"p",href:"https://opcfoundation.org/developer-tools/samples-and-tools-classic/core-components/"},"https://opcfoundation.org/developer-tools/samples-and-tools-classic/core-components/")),(0,r.kt)("p",null,"Newtonsoft.Json and CommandLineParser libraries are also required to interact with TCP commands and CLI commands\nrespectively."),(0,r.kt)("h1",{id:"hdaagent-standalone"},"HdaAgent (standalone)"),(0,r.kt)("p",null,"The agent is an executable that requires the following DLLs to run:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"CommandLine.dll"),(0,r.kt)("li",{parentName:"ul"},"Newtonsoft.Json.dll"),(0,r.kt)("li",{parentName:"ul"},"OpcComRcw.dll"),(0,r.kt)("li",{parentName:"ul"},"OpcNetApi.Com.dll"),(0,r.kt)("li",{parentName:"ul"},"OpcNetApi.dll")),(0,r.kt)("p",null,"Several actions are possible:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"ping: to check connection and gives server information"),(0,r.kt)("li",{parentName:"ul"},"catalog: to list available tags and store them in a CSV file"),(0,r.kt)("li",{parentName:"ul"},"bulk: to request history and store it in one file per tag")),(0,r.kt)("p",null,"The following options are available for all commands:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"-h --host                   Host name (or IP address).\n-s --server                 HDA Server name (ex: Matrikon.OPC.Simulation.1)\n-l --consoleLevel           Verbosity level for Console (error, warning, info, debug, trace). Default debug\n-x --fileLevel              Verbosity level for File (error, warning, info, debug, trace). Default debug\n")),(0,r.kt)("h2",{id:"ping"},"ping"),(0,r.kt)("p",null,"The following option is available:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"-i --infos              Display supported aggregates and attributes from the server. Default: false\n")),(0,r.kt)("h3",{id:"usage"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},".\\HdaAgent.exe ping -h localhost -s Matrikon.OPC.Simulation -i\n")),(0,r.kt)("p",null,"The ping command with the ",(0,r.kt)("em",{parentName:"p"},"-i")," option returns three messages from the Matrikon simulation server:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Status infos:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n    "VendorInfo": "Matrikon Inc +1-780-945-4011 http://www.matrikonopc.com",\n    "ProductVersion": "1.7.7433",\n    "ServerState": 1,\n    "StatusInfo": "",\n    "StartTime": "2022-05-16T14:27:46.3709266+00:00",\n    "CurrentTime": "2022-08-02T09:18:29.5739742+00:00",\n    "MaxReturnValues": 0\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Supported aggregates")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'[\n    {\n        "ID": 1,\n        "Name": "INTERPOLATIVE",\n        "Description": "Retrieve interpolated values."\n    },\n    {\n        "ID": 4,\n        "Name": "TIMEAVERAGE",\n        "Description": "Retrieve the time weighted average data over the resample interval."\n    },\n    {\n        "ID": 7,\n        "Name": "MINIMUMACTUALTIME",\n        "Description": "Retrieve the minimum value in the resample interval and the timestamp of the minimum value."\n    },\n    {\n        "ID": 8,\n        "Name": "MINIMUM",\n        "Description": "Retrieve the minimum value in the resample interval."\n    },\n    {\n        "ID": 9,\n        "Name": "MAXIMUMACTUALTIME",\n        "Description": "Retrieve the maximum value in the resample interval and the timestamp of the maximum value."\n    },\n    {\n        "ID": 10,\n        "Name": "MAXIMUM",\n        "Description": "Retrieve the maximum value in the resample interval."\n    }\n]\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Supported types:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'[\n    {\n        "ID": 1,\n        "Name": "DATA_TYPE",\n        "Description": "Data type",\n        "DataType": "System.Int16, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"\n    },\n    {\n        "ID": 2,\n        "Name": "DESCRIPTION",\n        "Description": "Item Description",\n        "DataType": "System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"\n    },\n    {\n        "ID": 11,\n        "Name": "NORMAL_MAXIMUM",\n        "Description": "High EU",\n        "DataType": "System.Double, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"\n    },\n    {\n        "ID": 12,\n        "Name": "NORMAL_MINIMUM",\n        "Description": "Low EU",\n        "DataType": "System.Double, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"\n    },\n    {\n        "ID": 13,\n        "Name": "ITEMID",\n        "Description": "Item ID",\n        "DataType": "System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"\n    },\n    {\n        "ID": -5,\n        "Name": "TRIANGLE",\n        "Description": "Triangle Wave",\n        "DataType": "Opc.Type, OpcNetApi, Version=2.1.0.0, Culture=neutral, PublicKeyToken=9a40e993cbface53"\n    },\n    {\n        "ID": -4,\n        "Name": "SQUARE",\n        "Description": "Square Wave",\n        "DataType": "Opc.Type, OpcNetApi, Version=2.1.0.0, Culture=neutral, PublicKeyToken=9a40e993cbface53"\n    },\n    {\n        "ID": -3,\n        "Name": "SAWTOOTH",\n        "Description": "Saw-toothed Wave",\n        "DataType": "Opc.Type, OpcNetApi, Version=2.1.0.0, Culture=neutral, PublicKeyToken=9a40e993cbface53"\n    },\n    {\n        "ID": -2,\n        "Name": "RANDOM",\n        "Description": "Random",\n        "DataType": "Opc.Type, OpcNetApi, Version=2.1.0.0, Culture=neutral, PublicKeyToken=9a40e993cbface53"\n    },\n    {\n        "ID": -1,\n        "Name": "BUCKET",\n        "Description": "Bucket Brigade",\n        "DataType": "Opc.Type, OpcNetApi, Version=2.1.0.0, Culture=neutral, PublicKeyToken=9a40e993cbface53"\n    }\n]\n')),(0,r.kt)("h2",{id:"catalog"},"catalog"),(0,r.kt)("p",null,"HdaAgent Catalog creates a csv file catalog.csv using the browse API."),(0,r.kt)("p",null,"The program displays information about the server (API ServerStatus), Aggregates (getAggregates)\nand Attributes (getAttributes) as JSON string in the console."),(0,r.kt)("p",null,"The following options are available:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"-i --includesAll        Includes all Items in the server (i.e. folders). Default: false\n-f --file               Name of the output folder. Default: catalog.csv\n")),(0,r.kt)("h3",{id:"basic-usage"},"Basic usage"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},".\\HDAAgent.exe catalog -h localhost -s Matrikon.OPC.Simulation")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'Name,Address\n"ArrayOfReal8","Bucket Brigade.ArrayOfReal8"\n"ArrayOfString","Bucket Brigade.ArrayOfString"\n...\n')),(0,r.kt)("h3",{id:"includes-all-and-specific-file"},"Includes all and specific file"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},".\\HDAAgent.exe catalog -h localhost -s Matrikon.OPC.Simulation --includesAll --file myFile.csv")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'Name,Address,isItem\n"Root","",False\n"Simulation Items,"Simulation Items",False\n"Bucket Brigade","Bucket Brigade",False\n"ArrayOfReal8","Bucket Brigade.ArrayOfReal8",True\n"ArrayOfString","Bucket Brigade.ArrayOfString",True\n...\n')),(0,r.kt)("h2",{id:"bulk"},"bulk"),(0,r.kt)("p",null,"The following options are available:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"-b --startTime          Start Time of the history      \n-e --endTime            End Time of the history\n-d --delay              Throttle: add a delay between requests to minimize load on HDA Servers (in ms)\n-m --max                Maximum number of values returned in a request. Defaut 0 (no maximum)\n-o --output             Name of the output folder. Default current folder\n-c --catalog            Name of the catalog file listing the tags\n-a --aggregate          Aggregate value. RAW=0, TOTAL=2, AVERAGE=3, MINIMUM=8, MAXIMUM=10, START=11, END=12. Default 0\n-i --interval           Interval (in second) if an aggregate is requested\n")),(0,r.kt)("h3",{id:"basic-usage-1"},"Basic usage"),(0,r.kt)("p",null,"Request raw values from ",(0,r.kt)("em",{parentName:"p"},"Matrikon.OPC.Simulation")," server located on ",(0,r.kt)("em",{parentName:"p"},"localhost"),", for points listed in catalog.csv between\n2022-01-01 00:00:00 and 2022-02-01 00:00:00."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'.\\HdaAgent.exe bulk -h localhost -s Matrikon.OPC.Simulation -c catalog.csv -b "2022-01-01 00:00:00" -e "2022-02-01 00:00:00" -a 0\n')),(0,r.kt)("h3",{id:"with-aggregates"},"With aggregates"),(0,r.kt)("p",null,"Request by group intervals of 60s (",(0,r.kt)("em",{parentName:"p"},"-i 60"),") the last value (",(0,r.kt)("em",{parentName:"p"},"-a 12"),") of each group for points listed in catalog.csv from\n",(0,r.kt)("em",{parentName:"p"},"Matrikon.OPC.Simulation")," server located on ",(0,r.kt)("em",{parentName:"p"},"localhost"),", between  2022-01-01 00:00:00 and 2022-02-01 00:00:00. Display all logs in the console with trace"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'.\\HdaAgent.exe bulk -h localhost -s Matrikon.OPC.Simulation -c catalog.csv -b "2022-01-01 00:00:00" -e "2022-02-01 00:00:00" -a 12 -i 60 -l trace\n')),(0,r.kt)("h1",{id:"hdaagent-with-oibus"},"HdaAgent (with OIBus)"),(0,r.kt)("p",null,"OIBus communicates with the HdaAgent through a TCP communication. See ",(0,r.kt)("a",{parentName:"p",href:"/fr/docs/guide/south-connectors/opchda"},"OIBus OPCHDA documentation")," for more information."))}p.isMDXComponent=!0}}]);