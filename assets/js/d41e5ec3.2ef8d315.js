"use strict";(self.webpackChunkdoc_oibus=self.webpackChunkdoc_oibus||[]).push([[5687],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(n),m=i,k=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(k,a(a({ref:t},p),{},{components:n})):r.createElement(k,a({ref:t},p))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:i,a[1]=c;for(var l=2;l<o;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5750:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));const o={displayed_sidebar:"developerSidebar",sidebar_position:4},a="OIBus with Docker",c={unversionedId:"developer/docker",id:"developer/docker",title:"OIBus with Docker",description:"OIBus can be incorporated into a Docker image.",source:"@site/docs/developer/docker.md",sourceDirName:"developer",slug:"/developer/docker",permalink:"/docs/developer/docker",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{displayed_sidebar:"developerSidebar",sidebar_position:4},sidebar:"developerSidebar",previous:{title:"Connector class",permalink:"/docs/developer/create-connector/class"}},s={},l=[{value:"Docker image",id:"docker-image",level:2},{value:"Dependencies",id:"dependencies",level:3},{value:"Dockerfile",id:"dockerfile",level:3},{value:"Docker commands",id:"docker-commands",level:3},{value:"Specifics settings in Docker",id:"specifics-settings-in-docker",level:2},{value:"Web server port",id:"web-server-port",level:3},{value:"IP filters",id:"ip-filters",level:3},{value:"Curl command",id:"curl-command",level:4},{value:"Bash script",id:"bash-script",level:4}],p={toc:l},u="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"oibus-with-docker"},"OIBus with Docker"),(0,i.kt)("p",null,"OIBus can be incorporated into a Docker image."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"This section is currently under development, and OIBus docker images will be made accessible shortly.")),(0,i.kt)("h2",{id:"docker-image"},"Docker image"),(0,i.kt)("p",null,"The image below takes two parameters:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"arch (default: x64)"),(0,i.kt)("li",{parentName:"ul"},"version")),(0,i.kt)("p",null,"This enables the creation of a Docker image with a particular OIBus version and architecture."),(0,i.kt)("h3",{id:"dependencies"},"Dependencies"),(0,i.kt)("p",null,"This image requires an ",(0,i.kt)("inlineCode",{parentName:"p"},"oibus-init.sh")," script for sending ",(0,i.kt)("em",{parentName:"p"},"curl")," commands to OIBus endpoints. If you don't want to include\nthis file, you will need to run a ",(0,i.kt)("a",{parentName:"p",href:"#curl-command"},"curl command")," from inside the docker."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="oibus-init.sh"',title:'"oibus-init.sh"'},'#!/bin/bash\n\ncurl --location --request POST \'http://localhost:2223/api/ip-filters\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n    "address": "*",\n    "description": "All"\n}\' \\\n-u "admin:pass"\n')),(0,i.kt)("h3",{id:"dockerfile"},"Dockerfile"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-docker",metastring:'title="Dockerfile"',title:'"Dockerfile"'},'FROM ubuntu\n\nARG arch="x64"\nARG version="v3.0.4"\n\n# Install git\nRUN apt update -y && apt install -y curl unzip\n\n# Create app directory\nWORKDIR /app\n\nRUN curl -LO https://github.com/OptimistikSAS/OIBus/releases/download/${version}/oibus-linux_${arch}-${version}.zip\nRUN unzip -a oibus-linux_${arch}-${version}.zip -d OIBus/\nWORKDIR /app/OIBus\nCOPY ./oibus-init.sh .\nRUN mkdir OIBusData\n\n# Expose port 2223 for OIBus\nEXPOSE 2223\n\n# Start OIBus\nCMD ["./oibus", "--config", "./OIBusData"]\n')),(0,i.kt)("h3",{id:"docker-commands"},"Docker commands"),(0,i.kt)("p",null,"Build the docker image:\n",(0,i.kt)("inlineCode",{parentName:"p"},"docker build -t oibus .")),(0,i.kt)("p",null,"Build the docker image with specific architecture and version:\n",(0,i.kt)("inlineCode",{parentName:"p"},'docker build -t oibus --build-arg arch="arm64" --build-arg version="v3.0.4" .')),(0,i.kt)("p",null,"Run a container:\n",(0,i.kt)("inlineCode",{parentName:"p"},"docker run --name oibus -d -p 2223:2223 -v ./OIBusData:/app/OIBus/OIBusData oibus")),(0,i.kt)("p",null,"The volume is not mandatory, but can be useful to access cache, logs, configuration database..."),(0,i.kt)("h2",{id:"specifics-settings-in-docker"},"Specifics settings in Docker"),(0,i.kt)("h3",{id:"web-server-port"},"Web server port"),(0,i.kt)("p",null,"When using OIBus within a container, the default HTTP port 2223 is exposed. If you wish to access OIBus from a different\nport, you can modify the ",(0,i.kt)("a",{parentName:"p",href:"#docker-commands"},"docker run")," command accordingly."),(0,i.kt)("admonition",{type:"danger"},(0,i.kt)("p",{parentName:"admonition"},"Do not change the HTTP port from the OIBus configuration. You will not be able to access the web page again if you\nchange it.")),(0,i.kt)("h3",{id:"ip-filters"},"IP filters"),(0,i.kt)("p",null,"By default, OIBus accepts connections only from localhost by ",(0,i.kt)("a",{parentName:"p",href:"/docs/guide/engine/ip-filters"},"filtering IP"),". When inside\na docker, the IP filter list must be updated."),(0,i.kt)("p",null,"You can either use the curl command or the bash script."),(0,i.kt)("h4",{id:"curl-command"},"Curl command"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'docker exec -it oibus curl --location --request POST \'http://localhost:2223/api/ip-filters\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n    "address": "*",\n    "description": "All"\n}\' \\\n-u "admin:pass"\n\n')),(0,i.kt)("h4",{id:"bash-script"},"Bash script"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"docker exec -it oibus ./oibus-init.sh")))}d.isMDXComponent=!0}}]);