"use strict";(self.webpackChunkdoc_oibus=self.webpackChunkdoc_oibus||[]).push([[6682],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return n?a.createElement(f,i(i({ref:t},c),{},{components:n})):a.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4451:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:4},i="External sources and endpoints",l={unversionedId:"guide/engine/external-sources",id:"guide/engine/external-sources",title:"External sources and endpoints",description:"External source",source:"@site/docs/guide/engine/external-sources.md",sourceDirName:"guide/engine",slug:"/guide/engine/external-sources",permalink:"/docs/next/guide/engine/external-sources",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"guideSidebar",previous:{title:"IP Filters",permalink:"/docs/next/guide/engine/ip-filters"},next:{title:"North connectors",permalink:"/docs/next/category/north-connectors"}},s={},u=[{value:"External source",id:"external-source",level:2},{value:"OIBus data endpoints",id:"oibus-data-endpoints",level:2},{value:"Data from another OIBus with OIConnect",id:"data-from-another-oibus-with-oiconnect",level:2},{value:"Data from another application",id:"data-from-another-application",level:2},{value:"JSON payload",id:"json-payload",level:3},{value:"File payload",id:"file-payload",level:3}],c={toc:u};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"external-sources-and-endpoints"},"External sources and endpoints"),(0,r.kt)("h2",{id:"external-source"},"External source"),(0,r.kt)("p",null,"An external source is a remote source that send values to OIBus with HTTP requests. North connectors can subscribe to\nexternal sources to filter data streams. If the external source is not defined in OIBus, the data received will be ignored\nto avoid cache saturation."),(0,r.kt)("h2",{id:"oibus-data-endpoints"},"OIBus data endpoints"),(0,r.kt)("p",null,"OIBus can receive data from its two endpoints:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"POST ",(0,r.kt)("inlineCode",{parentName:"li"},"/api/add-values")," to receive values in JSON payload with basic authentication"),(0,r.kt)("li",{parentName:"ul"},"POST ",(0,r.kt)("inlineCode",{parentName:"li"},"/api/add-file")," to receive values as files (HTTP form-data) with basic authentication")),(0,r.kt)("p",null,"These two endpoints required a ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," query param. This ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," refers to an external source.\nThe data are retrieved by the OIBus engine and stored into the North caches subscribed to the external source."),(0,r.kt)("h2",{id:"data-from-another-oibus-with-oiconnect"},"Data from another OIBus with OIConnect"),(0,r.kt)("p",null,"You can send data from one OIBus to another with a ",(0,r.kt)("a",{parentName:"p",href:"/docs/next/guide/north-connectors/oiconnect"},"OIConnect")," North connector.\nIn this case, the ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," query param will be set to ",(0,r.kt)("inlineCode",{parentName:"p"},"MyFirstOIBus:MyOIConnect"),", so your external source must be set to\n",(0,r.kt)("inlineCode",{parentName:"p"},"MyFirstOIBus:MyOIConnect"),"."),(0,r.kt)("h2",{id:"data-from-another-application"},"Data from another application"),(0,r.kt)("h3",{id:"json-payload"},"JSON payload"),(0,r.kt)("p",null,"To send data into OIBus with JSON payload, you can use a HTTP request with the following payload:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'[\n    {\n        "timestamp": "2023-01-01T00:00:00.000Z",\n        "pointId": "my reference",\n        "data": {\n            "value": 1234\n        }\n    },\n    {\n        "timestamp": "2023-01-01T10:00:00.000Z",\n        "pointId": "another reference",\n        "data": {\n            "value": 456\n        }\n    }\n]\n')),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'curl --location \'http://localhost:2223/api/add-values?name=%27test%27\' \\\n--header \'Content-Type: application/json\' \\\n-u <username>:<password> \\\n--data \'[\n    {\n        "timestamp": "2023-01-01T00:00:00.000Z",\n        "pointId": "my reference",\n        "data": {\n            "value": 1234\n        }\n    },\n    {\n        "timestamp": "2023-01-01T10:00:00.000Z",\n        "pointId": "another reference",\n        "data": {\n            "value": 456\n        }\n    }\n]\'\n')),(0,r.kt)("p",null,"This request will successfully return a ",(0,r.kt)("inlineCode",{parentName:"p"},"204 No Content")," status."),(0,r.kt)("h3",{id:"file-payload"},"File payload"),(0,r.kt)("p",null,"To send a file to OIBus, you can use the following cURL command\nExample:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"curl --location 'http://localhost:2223/api/add-file?name=%27test%27' \\\n-u <username>:<password> \\\n--form 'file=@\"<file-path>\"'\n")),(0,r.kt)("p",null,"This request will successfully return a ",(0,r.kt)("inlineCode",{parentName:"p"},"204 No Content")," status."))}p.isMDXComponent=!0}}]);