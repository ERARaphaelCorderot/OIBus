"use strict";(self.webpackChunkdoc_oibus=self.webpackChunkdoc_oibus||[]).push([[1005],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=i,h=d["".concat(c,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(h,o(o({ref:t},u),{},{components:n})):r.createElement(h,o({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2778:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));const a={sidebar_position:2},o="OPCUA",s={unversionedId:"guide/south-connectors/opcua",id:"guide/south-connectors/opcua",title:"OPCUA",description:"OPCUA is a protocol for accessing data in read or write mode. The data are organized in a tree-like address",source:"@site/docs/guide/south-connectors/opcua.md",sourceDirName:"guide/south-connectors",slug:"/guide/south-connectors/opcua",permalink:"/docs/next/guide/south-connectors/opcua",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"guideSidebar",previous:{title:"Folder Scanner",permalink:"/docs/next/guide/south-connectors/folder-scanner"},next:{title:"Microsoft SQL Server (MSSQL)",permalink:"/docs/next/guide/south-connectors/mssql"}},c={},l=[{value:"Specific settings",id:"specific-settings",level:2},{value:"Item settings",id:"item-settings",level:2},{value:"Security settings",id:"security-settings",level:2},{value:"Communication",id:"communication",level:3},{value:"Authentication",id:"authentication",level:3},{value:"Use the same certificate for user authentication and secure communications",id:"use-the-same-certificate-for-user-authentication-and-secure-communications",level:3},{value:"Using certificates with ProSys OPC UA Simulation Server",id:"using-certificates-with-prosys-opc-ua-simulation-server",level:2}],u={toc:l};function p(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"opcua"},"OPCUA"),(0,i.kt)("p",null,"OPCUA is a protocol for accessing data in read or write mode. The data are organized in a tree-like address\nspace and are referenced with a unique address each (called node ID). OPCUA is a modern standard based on TPC, replacing\nOPC HDA/DA (see ",(0,i.kt)("a",{parentName:"p",href:"/docs/next/guide/south-connectors/opchda"},"OPCHDA connector"),") technologies, and is often embedded natively in\nindustrial controllers."),(0,i.kt)("p",null,"OPCUA embeds two variants of the protocol: HA (Historical Access) and DA (Data Access). The first mode allows access to\na history of values over a time interval for the requested points (data), while the second mode accesses the values at\neach request or listen to the values' changes."),(0,i.kt)("p",null,"OIBus integrates the two OPCUA modes (HA and DA) in read-only mode. The\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/node-opcua/node-opcua"},"node-opcua")," library is used."),(0,i.kt)("h2",{id:"specific-settings"},"Specific settings"),(0,i.kt)("p",null,"To connect to a OPCUA server, OIBus needs a URL which is composed of several part:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"URL"),": String to connect to the server, of the form ",(0,i.kt)("inlineCode",{parentName:"li"},"opc.tcp://<host>:<port>/<server-name>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Retry interval"),": Time to wait between a reconnection upon a connection failure."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Security Mode"),": The communications can be secured with the ",(0,i.kt)("strong",{parentName:"li"},"security mode")," and ",(0,i.kt)("strong",{parentName:"li"},"security policy")," fields.\nAvailable modes are: None, Sign, SignAndEncrypt"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Security Policy")," (Security mode not None): None, Basic128, Basic192, Basic256, Basic128Rsa15, Basic192Rsa15, Basic256Rsa15, Basic256Sha256, Aes128_Sha256_RsaOaep, PubSub_Aes128_CTR, PubSub_Aes256_CTR"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Authentication"),": None, Basic, Certificate. See ",(0,i.kt)("a",{parentName:"li",href:"#authentication"},"security settings"))),(0,i.kt)("admonition",{title:"Compatibility with the OPCUA server",type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Be careful to select a security mode and a security policy supported by the OPCUA server!")),(0,i.kt)("h2",{id:"item-settings"},"Item settings"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Node ID"),": The Node ID matches the path of the data in the appropriate namespace in the OPCUA server. Be careful of the supported\nnode format of the server, with number of with string. For example, on Prosys, ",(0,i.kt)("inlineCode",{parentName:"li"},"ns=3;i=1001")," matches ",(0,i.kt)("inlineCode",{parentName:"li"},"ns=3;s=Counter"),". "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Mode"),": HA (Historical Access) or DA (Data Access)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Aggregate")," (HA mode only): It is possible to aggregate the retrieved values on the requested interval."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Resampling")," (HA mode only): It is possible to resample the retrieved values on the requested interval.")),(0,i.kt)("admonition",{title:"Compatibility with the OPCUA server",type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Not every aggregate and resampling are supported by OPCUA server. ",(0,i.kt)("em",{parentName:"p"},"Raw")," aggregate and ",(0,i.kt)("em",{parentName:"p"},"None")," resampling are preferred to\navoid compatibility issues.\nAlso, be sure of the supported mode on the server (HA or DA).")),(0,i.kt)("h2",{id:"security-settings"},"Security settings"),(0,i.kt)("h3",{id:"communication"},"Communication"),(0,i.kt)("p",null,"If a security mode other than ",(0,i.kt)("em",{parentName:"p"},"None")," is used, a certificate will be needed to sign and maybe encrypt the\ncommunications. A self-signed certificate (generated by OIBus at startup) is used to secure the\ncommunication with the OPCUA server. You can find the certificate used by OPCUA in the opcua folder of the South cache\n(in the data-stream).It must be trusted by the OPCUA server to allow communication."),(0,i.kt)("admonition",{title:"Example on Prosys OPCUA Simulation Server",type:"info"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("img",{alt:"Prosys OPCUA Simulation Server Certificates",src:n(1172).Z,width:"995",height:"627"})),(0,i.kt)("p",{parentName:"admonition"},"If the certificate is not trusted, an error will occur: ",(0,i.kt)("inlineCode",{parentName:"p"},"Error: The connection may have been rejected by server"))),(0,i.kt)("h3",{id:"authentication"},"Authentication"),(0,i.kt)("p",null,"The certificate, used to authenticate the client, must be added in the trusted user certificates of the OPCUA server. It\nis managed differently than the self-signed certificate mentioned before, used for ",(0,i.kt)("a",{parentName:"p",href:"#communication"},"secure communication"),"."),(0,i.kt)("admonition",{title:"Example on Prosys OPCUA Simulation Server",type:"info"},(0,i.kt)("p",{parentName:"admonition"},"For Prosys, the certificate used to authenticate OIBus must be placed in the ",(0,i.kt)("inlineCode",{parentName:"p"},".prosysopc\\prosys-opc-ua-simulation-server\\USERS_PKI\\CA\\certs"),"\nfolder. Otherwise, an error will occur: ",(0,i.kt)("inlineCode",{parentName:"p"},"Error:  serviceResult = BadIdentityTokenRejected (0x80210000)"),"."),(0,i.kt)("p",{parentName:"admonition"},"If a connection has already been tried and rejected, the certificate must be removed from the rejected certificates'\nfolder ",(0,i.kt)("inlineCode",{parentName:"p"},".prosysopc\\prosys-opc-ua-simulation-server\\USERS_PKI\\CA\\rejected")," and be placed in the trusted folder\n(",(0,i.kt)("inlineCode",{parentName:"p"},".prosysopc\\prosys-opc-ua-simulation-server\\USERS_PKI\\CA\\certs"),").")),(0,i.kt)("h3",{id:"use-the-same-certificate-for-user-authentication-and-secure-communications"},"Use the same certificate for user authentication and secure communications"),(0,i.kt)("p",null,"The same certificate can be used for both sign and encrypt operations and for authentication. To do that, the ",(0,i.kt)("inlineCode",{parentName:"p"},"cert.pem"),"\nand ",(0,i.kt)("inlineCode",{parentName:"p"},"private.pem")," file paths must be specified. They are located in the south cache data stream folder\n(inside the opcua directory)."),(0,i.kt)("p",null,"On the OPCUA server side, the self-signed certificate (",(0,i.kt)("inlineCode",{parentName:"p"},"cert.pem"),") must be copied in the user certificates' folder. "),(0,i.kt)("p",null,"For example, with Prosys OPCUA Simulation Server: ",(0,i.kt)("inlineCode",{parentName:"p"},".prosysopc\\prosys-opc-ua-simulation-server\\USERS_PKI\\CA\\certs"),"."),(0,i.kt)("h2",{id:"using-certificates-with-prosys-opc-ua-simulation-server"},"Using certificates with ProSys OPC UA Simulation Server"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Create a cert.conf file:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'[ req ]\ndefault_bits = 2048\ndefault_md = sha256\ndistinguished_name = subject\nreq_extensions = req_ext\nx509_extensions = req_ext\nstring_mask = utf8only\nprompt = no\n\n[ req_ext ]\nbasicConstraints = CA:FALSE\nnsCertType = client, server\nkeyUsage = nonRepudiation, digitalSignature, keyEncipherment, dataEncipherment, keyCertSign\nextendedKeyUsage= serverAuth, clientAuth\nnsComment = "OIBus User Cert"\nsubjectKeyIdentifier=hash\nauthorityKeyIdentifier=keyid,issuer\nsubjectAltName = URI:urn:opcua:user:oibus,IP: 127.0.0.1\n\n[ subject ]\ncountryName = FR\nstateOrProvinceName = FR\nlocalityName = Chamb\xe9ry\norganizationName = OI\ncommonName = oibus\n')),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Create a private key and certificate using the ",(0,i.kt)("inlineCode",{parentName:"li"},"cert.conf"),":")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"openssl req -new -x509 -keyout oibus.key -out oibus.pem -config cert.conf\n")),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Remove private key passphrase:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"openssl rsa -in oibus.key -out oibus.key\n")),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Create DER cert for ProSys:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"openssl x509 -inform PEM -outform DER -in oibus.pem -out oibus.der\n")),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},"Copy the DER cert in ProSys USERS_PKI certificate folder: ",(0,i.kt)("inlineCode",{parentName:"li"},"prosys-opc-ua-simulation-server\\USERS_PKI\\CA\\certs"))))}p.isMDXComponent=!0},1172:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/prosys-opcua-simulation-server-certificates-3aa9f72ae5a03d39b377b01e927c54ba.png"}}]);